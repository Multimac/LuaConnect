///////////////////////////////////////////////////////////////////////////////////////////////////
/// LuaConnect/VM.h
///////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef LUACONNECT_VM
#define LUACONNECT_VM

#include "Config.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
/// Preprocessor
///////////////////////////////////////////////////////////////////////////////////////////////////
#include "Function.h"
#include "Helpers\NonCopyable.h"

#include <memory>
#include <string>
#include <vector>

///////////////////////////////////////////////////////////////////////////////////////////////////
/// Forward Declarations
///////////////////////////////////////////////////////////////////////////////////////////////////
namespace LuaConnect
{
    class State;
    class Table;
}

namespace LuaConnect
{
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// Class - VM
    ///////////////////////////////////////////////////////////////////////////////////////////////
    class LUACONNECT_API VM
    {
        friend class Function;
        friend Table;

        template <typename T>
        friend class Type;
        template <typename T>
        friend class Userdata;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// Members
    ///////////////////////////////////////////////////////////////////////////////////////////////
    private:
        std::shared_ptr<State> m_state;

    public:
        VM();

        Table GetGlobalTable();

        Function LoadBuffer(std::string buffer, const Table* environment);
        Function LoadFile(std::string filename, const Table* environment);
    };
}

#endif LUACONNECT_VM